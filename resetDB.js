// resetDB.js
import pkg from "pg";
import dotenv from "dotenv";
dotenv.config();

const { Pool } = pkg;
const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: { rejectUnauthorized: false }
});

const fixedBooks = [
  { name: "L·∫≠p tr√¨nh Python c∆° b·∫£n", author: "Nguy·ªÖn Thanh T√πng", category: "C√¥ng ngh·ªá", position: "A1" },
  { name: "Tr√≠ tu·ªá nh√¢n t·∫°o", author: "Stuart Russell & Peter Norvig", category: "C√¥ng ngh·ªá", position: "A2" },
  { name: "Khoa h·ªçc d·ªØ li·ªáu v·ªõi Python", author: "Wes McKinney", category: "C√¥ng ngh·ªá", position: "A3" },
  { name: "Truy·ªán Ki·ªÅu", author: "Nguy·ªÖn Du", category: "VƒÉn h·ªçc", position: "B1" },
  { name: "Nh·∫≠t k√Ω trong t√π", author: "H·ªì Ch√≠ Minh", category: "VƒÉn h·ªçc", position: "B2" },
  { name: "Chi·∫øn tranh v√† ho√† b√¨nh", author: "Lev Tolstoy", category: "VƒÉn h·ªçc", position: "B3" },
  { name: "ƒê·∫Øc nh√¢n t√¢m", author: "Dale Carnegie", category: "T√¢m l√Ω", position: "C1" },
  { name: "T∆∞ b·∫£n", author: "Karl Marx", category: "Kinh t·∫ø", position: "D1" },
  { name: "Ngu·ªìn g·ªëc c√°c lo√†i", author: "Charles Darwin", category: "Khoa h·ªçc", position: "E1" },
  { name: "L∆∞·ª£c s·ª≠ th·ªùi gian", author: "Stephen Hawking", category: "Khoa h·ªçc", position: "E2" },
  { name: "Sapiens: L∆∞·ª£c s·ª≠ lo√†i ng∆∞·ªùi", author: "Yuval Noah Harari", category: "L·ªãch s·ª≠", position: "F1" },
  { name: "Nh√† gi·∫£ kim", author: "Paulo Coelho", category: "VƒÉn h·ªçc", position: "B4" },
  { name: "Ph√¢n t√≠ch t√¢m l√Ω h·ªçc", author: "Sigmund Freud", category: "T√¢m l√Ω", position: "C2" },
  { name: "Kinh t·∫ø h·ªçc vƒ© m√¥", author: "N. Gregory Mankiw", category: "Kinh t·∫ø", position: "D2" },
  { name: "C√°c cu·ªôc c√°ch m·∫°ng th·∫ø gi·ªõi", author: "Christopher Hill", category: "L·ªãch s·ª≠", position: "F2" }
];

async function resetDB() {
  try {
    console.log("üóëÔ∏è TRUNCATE b·∫£ng books...");
    await pool.query("TRUNCATE TABLE books RESTART IDENTITY CASCADE");

    console.log("üì• N·∫°p d·ªØ li·ªáu g·ªëc...");
    for (const book of fixedBooks) {
      await pool.query(
        "INSERT INTO books (name, author, category, position) VALUES ($1,$2,$3,$4)",
        [book.name, book.author, book.category, book.position]
      );
      console.log(`‚úÖ ƒê√£ th√™m: ${book.name} (${book.author})`);
    }

    console.log("üéâ Reset DB th√†nh c√¥ng!");
  } catch (err) {
    console.error("‚ùå L·ªói reset:", err);
  } finally {
    await pool.end();
  }
}

resetDB();
